Feature Flags / Kill Switch (Granular)
🎯 PM View — Why Users & Business Need It

Problem: Every new feature carries risk. In financial systems, even small mistakes can destroy user trust. We can’t afford silent errors.

Solution: Introduce execution modes — like “safety gears” — so the team can test new AI logic without touching the live financial ledger.

User Promise: “Your records are never at risk. If something breaks, finbrain reverts instantly to the legacy safe path.”

Business Impact:

Safe Testing: Engineers can test new logic in production (with real data) but invisible to users.

Zero Downtime Rollback: A single flag flip restores the current, proven behavior.

Risk-Free Innovation: Enables rapid iteration while guaranteeing financial integrity.

Example:

If a bug is detected in categorization, one switch (PCA_MODE=FALLBACK) makes finbrain behave exactly as it does today. Users never notice the failure.

🛠 CTO View — How We Implement Safely

We add granular modes that wrap the entire interpreter pipeline. They dictate what happens with each Canonical Command (CC):

FALLBACK (default safe)

Ignore CCs, run legacy parser + raw writes only.

System behaves exactly as today.

SHADOW (safe test)

Agent generates CC → persisted in inference_snapshot.

No overlay writes.

Lets us validate new logic invisibly against real traffic.

DRYRUN (safe rehearsal)

CC drives raw ledger write only.

Overlay writes suppressed.

UI shows “would log” messages to testers, but user ledger untouched.

ON (full feature)

CC drives raw + overlay writes.

Audit UI + rules active.

The intended production mode.

Implementation Detail:

Wrap router pipeline:

if PCA_MODE == "FALLBACK":
    legacy_flow()
elif PCA_MODE == "SHADOW":
    persist_snapshot(cc)
elif PCA_MODE == "DRYRUN":
    persist_snapshot(cc)
    write_raw(cc)
    render_would_log()
elif PCA_MODE == "ON":
    persist_snapshot(cc)
    write_raw(cc)
    write_overlay(cc)
    render_full_ui(cc)


All mode changes are runtime flags (env or config service), no redeploy needed.

🧩 Data Flow (Safe by Design)

User logs: “Lunch 500.”

Agent creates CC.

Depending on mode:

FALLBACK: old single-view behavior (as now).

SHADOW: snapshot stored, no user impact.

DRYRUN: raw logged, but overlays not written → safe preview.

ON: raw logged + overlays updated → audit row shown.

⚠️ Risk Controls

Raw ledger never skipped: In DRYRUN/ON, raw write always happens.

Immutable storage: Snapshots append-only for replay.

Instant rollback: PCA_MODE=FALLBACK → system instantly reverts to legacy.

Safe defaults: PCA_MODE defaults to FALLBACK in prod until explicitly enabled.

🚀 Why This is MVP-Critical

PM Perspective: Builds user trust by ensuring we never test directly on their money without guardrails.

CTO Perspective: Gives engineering surgical control to debug, shadow test, and rehearse — while preserving raw ledger integrity.

Both Perspectives: It unlocks safe innovation: you can ship new AI logic today, validate in SHADOW, trial in DRYRUN, and go live in ON — all without ever risking the core system.

✅ In short:

PM Pitch: “Modes are our safety net. We can improve finbrain without ever risking user trust.”

CTO Pitch: “It’s a flag around the pipeline. Raw ledger is untouched, overlays are optional, rollback is instant. Risk = zero.”