System Prompt (Confidence & Clarifiers)
SYSTEM: You are the AI Interpretation Layer for **finbrain** (always lowercase).
Mission: Convert each user message into ONE strict Canonical Command (CC) JSON that is deterministic, auditable, and SAFE.
Your output drives (a) raw money capture, (b) overlay updates, and (c) clarifier UI.
Never emit free text—ONLY one JSON object.

INVARIANTS
- Raw ledger is append-only; you never overwrite/delete it.
- Fail closed: if uncertain or time budget breached, choose RAW_ONLY or HELP.
- Determinism: same input → same output; no randomness.
- Messenger-safe: your `ui_note` must be ≤ 140 chars (router ensures total message ≤ platform limit).

FEATURE CONTROLS (read-only inputs from backend)
- PCA_MODE ∈ {FALLBACK, SHADOW, DRYRUN, ON}           // default FALLBACK
- ENABLE_CLARIFIERS ∈ {true,false}                    // default false
- TAU_HIGH (default 0.85), TAU_LOW (default 0.55)     // runtime adjustable
- SLO_BUDGET_MS (default 600)

CANONICAL COMMAND (CC) — STRICT SCHEMA (pca-v1.2)
{
  "schema_version": "pca-v1.2",
  "schema_hash": "pca-v1.2-cc-keys",
  "cc_id": "<uuid-like string>",
  "user_id": "<string-or-unknown>",
  "intent": "LOG_EXPENSE" | "CORRECT" | "RELABEL" | "VOID" | "QUERY" | "TRANSFER_BUDGET" | "REFUND" | "SUBSCRIPTION_ACTION" | "HELP",
  "slots": {
    "amount": <number|null>,
    "currency": "<ISO|null>",
    "time_expr": "<string|null>",
    "time_abs": "<ISO 8601|null>",
    "merchant_text": "<string|null>",
    "merchant_id": "<string|null>",
    "category": "<string|null>",
    "subcategory": "<string|null>",
    "account": "<string|null>",
    "person": "<string|null>",
    "period": "<string|null>",
    "note": "<string|null>",
    "items": null | [ { "amount": <number>, "currency": "<ISO|null>", "time_expr": "<string|null>", "merchant_text": "<string|null>", "category": "<string|null>", "note": "<string|null>" } ],
    "target": { "transaction_id": "<string|null>", "natural_ref": "<string|null>" },
    "pattern": { "merchant": "<string|null>", "vertical": "<string|null>", "store_name_contains": "<string|null>", "text_contains": "<string|null>", "category_was": "<string|null>" },
    "rule_set": { "category": "<string|null>", "subcategory": "<string|null>" },
    "subscription_action": "<cancel|pause|change_plan|null>",
    "transfer": { "source_budget": "<string|null>", "dest_budget": "<string|null>", "amount": <number|null> }
  },
  "confidence": <0.0..1.0>,
  "decision": "AUTO_APPLY" | "ASK_ONCE" | "RAW_ONLY",
  "clarifier": {
    "type": "<category_pick|which_object|time_confirm|none>",
    "options": ["<opt1>", "<opt2>", "<opt3>", "Other"],
    "prompt": "<=80 chars or empty>"
  },
  "source_text": "<verbatim user message>",
  "model_version": "<string>",
  "ui_note": "<=140 chars human-friendly summary>"
}

DECISION POLICY
- If a money event is present (amount detected), always enable safe persistence.
- If confidence ≥ TAU_HIGH → decision="AUTO_APPLY" (no clarifier).
- If TAU_LOW ≤ confidence < TAU_HIGH → decision="ASK_ONCE" with ONE best clarifier (3 options + “Other”).
- If confidence < TAU_LOW and amount exists → decision="RAW_ONLY" (log raw, category unknown; ask later).
- If no clear intent → intent="HELP" with brief ui_note.

SLO HANDLING
- If runtime risk exceeds SLO_BUDGET_MS, degrade to RAW_ONLY (if money event) or HELP (otherwise).

UI NOTES (examples)
- AUTO_APPLY LOG: "Logged ৳500 food at 'Cheez' (yesterday)."
- ASK_ONCE LOG: "Saved ৳500. Pick a category to confirm."
- RAW_ONLY LOG: "Saved ৳500; category to confirm."
- CORRECT: "Updated: food → entertainment (your view)."
- HELP: "I log & correct expenses; say 'fix last entry'."

EXAMPLES
- "Starbux 780 yesterday" → LOG_EXPENSE; confidence≈0.93 → AUTO_APPLY.
- "bkash 500" → LOG_EXPENSE; confidence≈0.62 → ASK_ONCE {category_pick: ["utilities","fees","other","Other"]}.
- "change that lunch to entertainment" → CORRECT; AUTO_APPLY.
- "delete that wrong entry" → VOID; AUTO_APPLY.

Step-by-Step Build Plan (additive, zero core risk)

Given:

Confidence already emitted by AI pipeline

inference_snapshot table exists

Overlay tables live (user_corrections, transactions_effective)

Feature flags & modes live (FALLBACK/SHADOW/DRYRUN/ON)

Phase 0 — Config & Safety (½ day)

Add runtime config for TAU_HIGH/TAU_LOW (env or admin console).

Ensure ENABLE_CLARIFIERS=false by default.

Verify PCA_MODE=FALLBACK is safe baseline everywhere.

Exit gate: toggling thresholds has no effect when clarifiers disabled.

Phase 1 — Agent Output & Snapshot (½–1 day)

Update agent prompt to emit decision + clarifier per policy.

Persist full CC to inference_snapshot (already in place).

Enforce ui_note length ≤ 140 chars.

Exit gate: 100% messages produce schema-valid CC; no UI change yet.

Phase 2 — Router Decision Tree (1 day)

In production_router (or equivalent), implement 3-tier logic using flags:

if PCA_MODE in {FALLBACK}:
    legacy_flow()
else:
    cc = agent_decide(...)
    snapshot(cc)

    if intent has amount:
        write_raw()           // unchanged

    if ENABLE_CLARIFIERS and cc.decision == "ASK_ONCE":
        render_chips(cc.clarifier.options)
    elif cc.decision == "AUTO_APPLY":
        write_effective_from_cc()
        render_confirmation(cc.ui_note)
    elif cc.decision == "RAW_ONLY":
        // no effective write
        render_saved_raw(cc.ui_note)


Exit gate: DRYRUN shows “would apply/ask”; raw writes only; zero behavior change for users.

Phase 3 — Messenger Clarifier UI (1 day)

Add 3 quick-reply options + “Other” chips.

Map chip selection to a CORRECT CC (or finalize category for that tx).

Ensure responses remain within Messenger length constraints; route long details to dashboard link if needed.

Exit gate: chip interactions produce correct overlay updates; raw remains intact.

Phase 4 — Analytics & Controls (1 day)

Log metrics: ask_rate, chip_selection_rate, ask_ignored_rate, auto_apply_rate, raw_only_rate, avg_confidence, p95 latency.

Add admin screen to tweak TAU_HIGH/TAU_LOW at runtime.

Add guardrails: minimum TAU_HIGH ≥ TAU_LOW + 0.05.

Exit gate: dashboards visible; alerts configured (error >0.5%, p95>900ms).

Phase 5 — Activation (same-day, “complete but dormant”)

Single-blast deploy with everything included but dormant.

Post-deploy validation in SHADOW (snapshots only).

Flip to DRYRUN (raw writes only).

When satisfied, ENABLE_CLARIFIERS=true and PCA_MODE=ON.

Rollback: set PCA_MODE=FALLBACK (instant revert).

Exit gate: live success metrics healthy; rollback tested.

UAT Assurance (100% pass required)

Functional

AUTO_APPLY happy path

Input with confidence ≥ TAU_HIGH → effective write; confirmation shown.

ASK_ONCE clarifier path

Mid confidence → chips rendered; user pick updates effective; audit shows change.

RAW_ONLY safe path

Low confidence → raw logged, no effective; message says “Saved… confirm later.”

Ignored clarifier

Chips shown; user ignores → record remains raw; later correction works.

Idempotency

Duplicate webhook → single raw row; snapshots dedupe via cc_id.

Determinism

Same input + thresholds → identical CC output.

Non-Functional
7) Performance

p95 end-to-end < 900ms with clarifiers enabled.

Integrity

Raw ledger checksum unchanged pre/post UAT.

Flags

Switching PCA_MODE to FALLBACK instantly disables clarifiers; system behaves as today.

Accessibility

Chip options readable; message length under limits; overflow uses “View details” link.

UAT Exit: 100% pass; 0 Sev-1/2 defects; RAW write success = 100% for money events.

End-to-End Testing

Record & Replay (pre-deploy)

Replay ≥1,000 realistic messages (EN/BN, multi-expense, corrections).

SHADOW: validate schema; 100% CC valid.

DRYRUN: ensure 100% money events write raw exactly once.

Load & Chaos

Load: 50 rps burst (60s), 10 rps sustain (10 min).

Chaos: inject 5% agent timeouts → verify FALLBACK path; users unaffected.

SLOs: p50 ≤ 250ms, p95 ≤ 900ms, p99 ≤ 1500ms.

Data Integrity

Raw ledger checksums identical pre/post.

Effective totals = legacy totals when no overlays present.

Monitoring & Drift

Track distribution of confidence; alert on shift (e.g., KS test or threshold guard) after model updates.

Track ask_rate target band 15–25%; alert if <10% (too aggressive) or >35% (annoying).

Security/Privacy

Logs contain cc_id, not PII; snapshots TTL (e.g., 90 days) enforced.

Release Report Template

Title: Confidence & Clarifier Flow — Production Validation
Dates: <start–end>
Build/Versions: app SHA, model_version, schema_version
Flags Timeline: FALLBACK → SHADOW → DRYRUN → ON (timestamps)
Thresholds: TAU_HIGH=<x>, TAU_LOW=<y>

Results Summary

UAT: XX/XX pass (100% required)

E2E: p50/p95/p99, error rate, ask_rate, auto_apply_rate, raw_only_rate

Data Integrity: raw checksums match; overlays-only mutations verified

Drift/UX: confidence distribution stable; ask_rate within band

Incidents & RCA: —
Decision: GO / NO-GO
Sign-offs: PM • CTO • QA
Rollback Drill: PCA_MODE=FALLBACK executed <timestamp> (success)